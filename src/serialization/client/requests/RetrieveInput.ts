/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../index";
import * as MultiOn from "../../../api/index";
import * as core from "../../../core";

export const RetrieveInput: core.serialization.Schema<serializers.RetrieveInput.Raw, MultiOn.RetrieveInput> =
    core.serialization.object({
        cmd: core.serialization.string(),
        url: core.serialization.string().optional(),
        sessionId: core.serialization.property("session_id", core.serialization.string().optional()),
        local: core.serialization.boolean().optional(),
        fields: core.serialization.list(core.serialization.string()).optional(),
        format: core.serialization.stringLiteral("json").optional(),
        maxItems: core.serialization.property("max_items", core.serialization.number().optional()),
        fullPage: core.serialization.property("full_page", core.serialization.boolean().optional()),
        renderJs: core.serialization.property("render_js", core.serialization.boolean().optional()),
        scrollToBottom: core.serialization.property("scroll_to_bottom", core.serialization.boolean().optional()),
        includeScreenshot: core.serialization.property("include_screenshot", core.serialization.boolean().optional()),
    });

export declare namespace RetrieveInput {
    interface Raw {
        cmd: string;
        url?: string | null;
        session_id?: string | null;
        local?: boolean | null;
        fields?: string[] | null;
        format?: "json" | null;
        max_items?: number | null;
        full_page?: boolean | null;
        render_js?: boolean | null;
        scroll_to_bottom?: boolean | null;
        include_screenshot?: boolean | null;
    }
}
