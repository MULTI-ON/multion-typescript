/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../..";
import * as MultiOn from "../../../../../api";
import * as core from "../../../../../core";
import { CreateSessionInputBrowserParams } from "../../types/CreateSessionInputBrowserParams";

export const CreateSessionInput: core.serialization.Schema<
    serializers.CreateSessionInput.Raw,
    MultiOn.CreateSessionInput
> = core.serialization.object({
    url: core.serialization.string(),
    local: core.serialization.boolean().optional(),
    browserParams: core.serialization.property("browser_params", CreateSessionInputBrowserParams.optional()),
    includeScreenshot: core.serialization.property("include_screenshot", core.serialization.boolean().optional()),
});

export declare namespace CreateSessionInput {
    interface Raw {
        url: string;
        local?: boolean | null;
        browser_params?: CreateSessionInputBrowserParams.Raw | null;
        include_screenshot?: boolean | null;
    }
}
