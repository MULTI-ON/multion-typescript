/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as MultiOn from "../../../../../api/index";
import * as core from "../../../../../core";

export const RetrieveInput: core.serialization.Schema<serializers.RetrieveInput.Raw, MultiOn.RetrieveInput> =
    core.serialization.object({
        cmd: core.serialization.string(),
        sessionId: core.serialization.property("session_id", core.serialization.string().optional()),
        pageNumber: core.serialization.property("page_number", core.serialization.number().optional()),
        url: core.serialization.string().optional(),
        fields: core.serialization.string().optional(),
        format: core.serialization.stringLiteral("json").optional(),
        includeScreenshot: core.serialization.property("include_screenshot", core.serialization.boolean().optional()),
    });

export declare namespace RetrieveInput {
    interface Raw {
        cmd: string;
        session_id?: string | null;
        page_number?: number | null;
        url?: string | null;
        fields?: string | null;
        format?: "json" | null;
        include_screenshot?: boolean | null;
    }
}
