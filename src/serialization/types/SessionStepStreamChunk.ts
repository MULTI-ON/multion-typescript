/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as MultiOn from "../../api/index";
import * as core from "../../core";
import { SessionStreamChunkEvent } from "./SessionStreamChunkEvent";
import { SessionStreamChunkFinalEvent } from "./SessionStreamChunkFinalEvent";

export const SessionStepStreamChunk: core.serialization.Schema<
    serializers.SessionStepStreamChunk.Raw,
    MultiOn.SessionStepStreamChunk
> = core.serialization
    .union("type", {
        event: SessionStreamChunkEvent,
        final_event: SessionStreamChunkFinalEvent,
    })
    .transform<MultiOn.SessionStepStreamChunk>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace SessionStepStreamChunk {
    type Raw = SessionStepStreamChunk.Event | SessionStepStreamChunk.FinalEvent;

    interface Event extends SessionStreamChunkEvent.Raw {
        type: "event";
    }

    interface FinalEvent extends SessionStreamChunkFinalEvent.Raw {
        type: "final_event";
    }
}
